#!/usr/bin/env python

import sys
import os
import re
import fnmatch

from argparse import ArgumentParser

parser = ArgumentParser(description = 'File operations manager.')
parser.add_argument('--config', '-c', metavar = 'CONFIG', dest = 'config', help = 'Configuration JSON.')
parser.add_argument('--dry-run', '-T', action = 'store_true', dest = 'dry_run', help = 'Dry run.')

args = parser.parse_args()
sys.argv = []

## Load the configuration
from dynamo.dataformat.configuration import Configuration

config = Configuration(args.config)

## Set up logging (write to stdout)
from dynamo.core.executable import make_standard_logger, authorized

LOG = make_standard_logger(config.get('log_level', 'info'))

## Configure
from dynamo.fileop.rlfsm import RLFSM
from dynamo.core.executable import inventory

## Run the main program
LOG.info('Instantiating RLFSM.')

rlfsm = RLFSM(config.get('rlfsm', None))

if not authorized or args.dry_run:
    rlfsm.set_read_only()

if 'sites_in_downtime' in config:
    for site_name in config.sites_in_downtime:
        LOG.info('Adding %s to downtime list.', site_name)
        rlfsm.sites_in_downtime.append(inventory.sites[site_name])

LOG.info('Checking and executing new file transfer subscriptions.')
rlfsm.transfer_files(inventory)

LOG.info('Checking and executing new file deletion subscriptions.')
rlfsm.delete_files(inventory)
